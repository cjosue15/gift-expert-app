{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","categories","type","onChange","target","value","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","item","id","title","image","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAgB9C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,IACAF,GAAc,SAACO,GAAD,OAAiBL,GAAjB,mBAAgCK,OAC9CJ,EAAc,OAMd,2BAAOK,KAAK,OAAOC,SAfR,SAACJ,GAChBF,EAAcE,EAAEK,OAAOC,QAcsBA,MAAOT,M,uBCrB/CU,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAGII,MAAMF,GAHV,cAGbG,EAHa,gBAIIA,EAASC,OAJb,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAD,YAAW,CAC7BC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZC,MAAK,UAAEH,EAAKI,cAAP,aAAE,EAAaC,iBAAiBb,QATtB,kBAYZM,GAZY,4CAAH,sDCYLQ,EAVK,SAAC,GAA0B,IAAxBL,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE9B,OADAI,QAAQC,IAAI,CAAEP,KAAIC,QAAOC,UAErB,yBAAKM,UAAU,qCACX,yBAAKC,IAAKP,EAAOQ,IAAKT,IACtB,2BAAIA,KCuCDU,EAzCC,SAAC,GAAkB,IAAhBtB,EAAe,EAAfA,SAAe,ECFN,SAACA,GAAc,IAAD,EACZZ,mBAAS,CAC/BmB,KAAM,GACNgB,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAUtC,OAJAC,qBAAU,WACN3B,EAAQC,GAAU2B,MAAK,SAACC,GAAD,OAAUH,EAAS,CAAEF,SAAS,EAAOhB,KAAMqB,SACnE,CAAC5B,IAEGwB,EDkB2BK,CAAa7B,GAAjCc,EA1BgB,EA0BtBP,KAAcgB,EA1BQ,EA0BRA,QAEtB,OACI,yBAAKJ,UAAU,qCACX,4BAAKnB,GACJuB,GAAW,yCACZ,yBAAKJ,UAAU,aACVL,EAAOL,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,eAAaoB,IAAKpB,EAAKC,IAAQD,UEhBpCqB,EAnBM,WAAO,IAAD,EACa3C,mBAAS,CAAC,kBADvB,mBAChBM,EADgB,KACJP,EADI,KAGvB,OACI,yBAAKwB,GAAG,QACJ,yBAAKQ,UAAU,aACX,4CACA,kBAAC,EAAD,CAAahC,cAAeA,IAC5B,6BACA,4BACKO,EAAWe,KAAI,SAACT,GAAD,OACZ,kBAAC,EAAD,CAAS8B,IAAK9B,EAAUA,SAAUA,W,MCV1DgC,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.e13567c0.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const chngeInput = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue) {\r\n            setCategories((categories) => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type='text' onChange={chngeInput} value={inputValue} />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=a33kTHDC3GddO5cD65gwNMWX0NGyGxvI`;\r\n\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map((item) => ({\r\n        id: item.id,\r\n        title: item.title,\r\n        image: item.images?.downsized_medium.url,\r\n    }));\r\n\r\n    return gifs;\r\n};\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({ id, title, image }) => {\r\n    console.log({ id, title, image });\r\n    return (\r\n        <div className='animate__animated animate__fadeIn'>\r\n            <img src={image} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n    // const [images, setImages] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     getGifs(category);\r\n    // }, [category]);\r\n\r\n    // const getGifs = async (category) => {\r\n    //     const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=a33kTHDC3GddO5cD65gwNMWX0NGyGxvI`;\r\n\r\n    //     const response = await fetch(url);\r\n    //     const { data } = await response.json();\r\n\r\n    //     const gifs = data.map((item) => ({\r\n    //         id: item.id,\r\n    //         title: item.title,\r\n    //         image: item.images?.downsized_medium.url,\r\n    //     }));\r\n\r\n    //     setImages(gifs);\r\n    // };\r\n\r\n    // useEffect(() => {\r\n    //     getGifs(category).then(setImages);\r\n    // }, [category]);\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <div className='animate__animated animate__fadeIn'>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Loading...</p>}\r\n            <div className='grid-gifs'>\r\n                {images.map((item) => (\r\n                    <GifGridItem key={item.id} {...item} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then((imgs) => setState({ loading: false, data: imgs }));\r\n    }, [category]);\r\n\r\n    return state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['One Punch-man']);\r\n\r\n    return (\r\n        <div id='main'>\r\n            <div className='container'>\r\n                <h2>GifExpertApp</h2>\r\n                <AddCategory setCategories={setCategories} />\r\n                <hr />\r\n                <ul>\r\n                    {categories.map((category) => (\r\n                        <GifGrid key={category} category={category} />\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}